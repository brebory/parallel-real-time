/*
 * AirTrafficControlSimulator.h
 *
 *  Created on: Nov 23, 2014
 *      Author: broberto
 */

#include "AirTrafficControlSimulator.h"
#include <math.h>
#include <stdiop.h>
#include <lib_ext.h>

poly Plane atc_create(cs_rand48_stream stream) {
	poly Plane result;
	// Create random gaussian distribution between 30.0 nm and 400.0 nm
	result = PlaneMakeRandomGaussian(stream, 400.0, 30.0);
	return result;
}

void atc_update(Grid grid, poly Plane plane, poly FlightRecord record, Radar *radar) {
	// Updates plane coordinates for 0.5s time-step according to specification.
	if ((plane.position.x + plane.velocity.dx) < grid.width) {
		if (abs(plane.position.y + plane.velocity.dy) < grid.height) {
			plane.position.x += plane.velocity.dx;
			plane.position.y += plane.velocity.dy;
		} else {
			if (plane.velocity.dy > 0) {
				// Plane is moving north, move to southernmost position.
				plane.position.y = -grid.height;
			} else {
				// Plane is moving south, move to northernmost position.
				plane.position.y = grid.height;
			}
			plane.position.x = (plane.velocity.dx / plane.velocity.dy) * plane.position.y;
		}
	} else {
		if (plane.velocity.dx > 0) {
			// Plane is moving east, move to westernmost position.
			plane.position.x = -grid.width;
		} else {
			// Plane is moving west
			plane.position.x = grid.width;
		}
		plane.position.y = (plane.velocity.dy / plane.velocity.dx) * plane.position.x;
	}
	
	// Update FlightRecord
	flight_record_update(plane, record);
	
	// Update Radar
	radar_update(stream, radar, plane);
	
	// Perform tracking and correlation
	correlate(radar, record);
}

void atc_display(poly Plane plane) {
	printf("###############\nCurrent Simulation Status:\n");
	printfp("Plane #%d: x: %f y: %f\n", get_penum(), plane.position.x, plane.position.y);
	printf("###############\n");
}
